@model Datingsida.Models.ProfileModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>ProfileModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="FirstName" class="control-label"></label>
                <input asp-for="FirstName" class="form-control" />
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LastName" class="control-label"></label>
                <input asp-for="LastName" class="form-control" />
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Age" class="control-label"></label>
                <input asp-for="Age" class="form-control" />
                <span asp-validation-for="Age" class="text-danger"></span>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @Html.RadioButtonFor(model => model.Gender, "Male")
                    @Html.Label("Male")
                    <br />
                    @Html.RadioButtonFor(model => model.Gender, "Female")
                    @Html.Label("Female")
                    <br />
                    @Html.RadioButtonFor(model => model.Gender, "Non-binary")
                    @Html.Label("Non-binary")
                    <br />
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Sexuality, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.RadioButtonFor(model => model.Sexuality, "Heterosexual")
                    @Html.Label("Heterosexual")
                    <br />
                    @Html.RadioButtonFor(model => model.Sexuality, "Homosexual")
                    @Html.Label("Homosexual")
                    <br />
                    @Html.RadioButtonFor(model => model.Sexuality, "Bisexual")
                    @Html.Label("Bisexual")
                    @Html.ValidationMessageFor(model => model.Sexuality, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label asp-for="ImageFile" class="control-label"></label>
                <img src="@Url.Content("~/image/"+ Model.ImageFilepath)" />
                <input asp-for="ImageFile" accept="image/*" />
                <input asp-for="ImageFilepath" type="hidden"/>
                <span asp-validation-for="ImageFile" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Presentation" class="control-label"></label>
                <input asp-for="Presentation" class="form-control" />
                <span asp-validation-for="Presentation" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
